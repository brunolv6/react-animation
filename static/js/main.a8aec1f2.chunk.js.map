{"version":3,"sources":["logo.svg","BlocoColorido.jsx","Animacao.jsx","App.js","reportWebVitals.js","index.js"],"names":["divStyle","color","backgroundColor","width","height","display","justifyContent","alignItems","BlocoColorido","props","style","name","ScrollMagicPluginGsap","ScrollMagic","TweenMax","TimelineMax","bg","fontSize","animacao1","opacity","position","animacao2","zIndex","top","left","estatico","right","Animacao","timeLineProcessor","onUpdate","this","updatePercentage","controller","to","triggerElement","triggerHook","duration","setPin","setTween","addTo","className","React","Component","divApp","margin","padding","minHeight","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAe,I,MCCTA,EAAW,CACbC,MAAO,QACPC,gBAAiB,OACjBC,MAAO,OACPC,OAAQ,SACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAWCC,MARjB,SAAuBC,GACnB,OACE,8BACE,sBAAKC,MAAOV,EAAZ,4BAAsCS,EAAME,W,0DCTpDC,gCAAsBC,EAAaC,IAAUC,KAE7C,IAAMC,EAAK,CACPf,MAAO,QACPC,gBAAiB,MACjBC,MAAO,OACPC,OAAQ,QACRa,SAAU,QACVZ,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAGVW,EAAY,CACdC,QAAS,IACTC,SAAU,WACVH,SAAU,OAGRI,EAAY,CACdC,OAAQ,IACRC,IAAK,IACLC,KAAM,IACNJ,SAAU,WACVH,SAAU,OAGRQ,EAAW,CACbF,IAAK,IACLC,KAAM,IACNE,MAAO,IACPN,SAAU,WACVH,SAAU,OAwCGU,E,uKAnCb,WACI,IAAIC,EAAoB,IAAIb,IAAY,CAAEc,SAAUC,KAAKC,mBAErDC,EAAa,IAAInB,aAErBe,EAAkBK,GAAG,gBAAiB,GAAI,CAAEd,QAAS,KAAO,IAE5DS,EAAkBK,GAAG,gBAAiB,GAAI,CAAET,KAAM,OAAQD,IAAK,SAAW,IACrEU,GAAG,gBAAiB,GAAI,CAAEd,QAAS,KAAM,IAEhC,IAAIN,QAAkB,CAChCqB,eAAgB,cAChBC,YAAa,UACbC,SAAU,SAETC,OAAO,eACPC,SAASV,GACTW,MAAMP,K,oBAOf,WACI,OACA,sBAAKQ,UAAU,aAAa9B,MAAOM,EAAnC,UACI,qBAAKwB,UAAU,eAAe9B,MAAOQ,EAArC,+BACA,qBAAKsB,UAAU,eAAe9B,MAAOW,EAArC,gCACA,qBAAKmB,UAAU,eAAe9B,MAAOe,EAArC,gC,GA/BWgB,IAAMC,WCnCvBC,G,MAAS,CACbzC,gBAAiB,MACjB0C,OAAQ,IACRC,QAAS,IACTC,UAAW,IACXzC,QAAS,UAeI0C,MAZf,WACE,OACE,qBAAKP,UAAU,MAAM9B,MAAOiC,EAA5B,SACE,yBAAQH,UAAU,aAAa9B,MAAOiC,EAAtC,UACE,cAAC,EAAD,CAAehC,KAAK,oCACpB,cAAC,EAAD,IACA,cAAC,EAAD,CAAeA,KAAK,2CCPbqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a8aec1f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nconst divStyle = {\r\n    color: 'white',\r\n    backgroundColor: 'blue',\r\n    width: '100%',\r\n    height: '1000px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  };\r\n\r\nfunction BlocoColorido(props) {\r\n    return (\r\n      <div>\r\n        <div style={divStyle}>Background dos {props.name}</div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default BlocoColorido;","import React from \"react\";\r\nimport * as ScrollMagic from \"scrollmagic\"; // Or use scrollmagic-with-ssr to avoid server rendering problems\r\nimport { TweenMax, TimelineMax } from \"gsap\"; // Also works with TweenLite and TimelineLite\r\nimport { ScrollMagicPluginGsap } from \"scrollmagic-plugin-gsap\";\r\n\r\nScrollMagicPluginGsap(ScrollMagic, TweenMax, TimelineMax);\r\n\r\nconst bg = {\r\n    color: 'white',\r\n    backgroundColor: 'red',\r\n    width: '100%',\r\n    height: '100vh',\r\n    fontSize: '2.5vw',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n};\r\n\r\nconst animacao1 = {\r\n    opacity: '0',\r\n    position: 'absolute',\r\n    fontSize: \"4vw\",\r\n};\r\n\r\nconst animacao2 = {\r\n    zIndex: '3',\r\n    top: '0',\r\n    left: '0',\r\n    position: 'absolute',\r\n    fontSize: '2vw'\r\n};\r\n\r\nconst estatico = {\r\n    top: '0',\r\n    left: '0',\r\n    right: '0',\r\n    position: 'absolute',\r\n    fontSize: '2vw'\r\n};\r\n\r\nclass Animacao extends React.Component{\r\n\r\n    componentDidMount() {\r\n        var timeLineProcessor = new TimelineMax({ onUpdate: this.updatePercentage });\r\n\r\n        var controller = new ScrollMagic.Controller();\r\n\r\n        timeLineProcessor.to('.c-animacao-1', .5, { opacity: '1' }, .5);\r\n\r\n        timeLineProcessor.to('.c-animacao-2', .8, { left: '80vw', top: \"100vh\" }, .1)\r\n            .to('.c-animacao-2', .2, { opacity: '0'}, .8)\r\n\r\n        const scene = new ScrollMagic.Scene({\r\n            triggerElement: \".c-animacao\",\r\n            triggerHook: \"onLeave\",\r\n            duration: \"240%\"\r\n        })\r\n            .setPin(\".c-animacao\")\r\n            .setTween(timeLineProcessor)\r\n            .addTo(controller);\r\n\r\n        // function updatePercentage() {\r\n        //     timeLineProcessor.progress();\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"c-animacao\" style={bg}>\r\n            <div className=\"c-animacao-1\" style={animacao1}>Aparecendo centro</div>\r\n            <div className=\"c-animacao-2\" style={animacao2}>Movimento Diagonal</div>\r\n            <div className=\"c-animacao-3\" style={estatico}>Est√°tico</div>\r\n        </div>\r\n        );\r\n    }\r\n  }\r\n  \r\n  export default Animacao;","import logo from './logo.svg';\nimport BlocoColorido from './BlocoColorido';\nimport Animacao from './Animacao'\nimport './App.css';\n\nconst divApp = {\n  backgroundColor: 'red',\n  margin: '0',\n  padding: '0',\n  minHeight: '0',\n  display: 'block'\n};\n\nfunction App() {\n  return (\n    <div className=\"App\" style={divApp}>\n      <header className=\"App-header\" style={divApp}>\n        <BlocoColorido name=\"scrolls antes do scroll animado\"/>\n        <Animacao/>\n        <BlocoColorido name=\"scrolls depois do scroll animado\"/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}